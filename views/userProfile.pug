doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(href='https://fonts.googleapis.com/css?family=Baloo+2&display=swap' rel='stylesheet')
  link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css")
  link(rel="stylesheet"
      href="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.1/build/styles/night-owl.min.css")
  link(rel='shortcut icon' type="image/png" href="/illustrations/logo.svg")
  link(rel='stylesheet' href='/css/me.css')
  title #{title}
  
header
  .logo
    a(href='/landing' style='text-decoration: none; color: #fff; font-size: 24px;\
    font-weight: bold;')
      div(style='display: flex; justify-content: center')
        img(src='/illustrations/logo2.svg' width='35px' height='35px' style='margin-right: 5px')
        | Dev
        span(style='color: #1DA977;') Con
  .search
    input(type='text' placeholder='Search' id='search')
    #search-results
  ul
    li
      a(href='/settings' style='color: #fff;')
        i.fas.fa-cog
        | &nbsp;&nbsp;Settings
    li
      p(style='color: #1DA977;' id='logout-btn')
        i.fas.fa-sign-out-alt
        | &nbsp;&nbsp;Logout
    li 
      - let circleDisplay = 'none';
      - if(user.notifNum < user.notifications.length) circleDisplay = 'block';
      p#notification-toggle-btn(style='color: #fff')
        i#circle.fas.fa-circle(style=`display: ${circleDisplay}; width: 10px; height: 10px ;position: absolute; top: -2px; right: -2px; color: #1DA977; z-index: 1000`)
        i.far.fa-bell    
.container
  - if(user.role === 'user')
    nav.left-nav
      ul
        li
          a(href='/home')
            i.fas.fa-home
            | &nbsp; Home
        li
          a(href='/me')
            i.fas.fa-user
            | &nbsp;&nbsp; Profile
        li
          a(href='/job-offers')
            i.fas.fa-users
            | &nbsp;&nbsp; Job offers
        li
          a(href='/bookmarks')
            i.far.fa-bookmark
            | &nbsp;&nbsp; Bookmarks
        li
          a(href='/chat')
            i.far.fa-comments
            | &nbsp; Messages
  - if(user.role === 'startup')
      nav.left-nav
          ul
            li
              a(href='/startups/me')
                i.fas.fa-user
                | &nbsp;&nbsp; Profile
            li.is-active
              a(href='/popular-posts')
                i.fas.fa-users
                | &nbsp;&nbsp; Popular Posts

            li
              a(href='/bookmarks')
                i.far.fa-bookmark
                | &nbsp;&nbsp; Bookmarks

            li
              a(href='/chat')
                i.far.fa-comments
                | &nbsp; Messages          
  main.main
    .info
      img(src=`/img/users/${user.photo}` alt='avatar' id='user-photo')
      .stats
        h2 #{user.name}
        h4 Web Developer
        .nums
          p
            | #{user.posts.length}
            span(style='font-weight: normal;')  Posts
            
          p#followers-btn
            | #{user.followers.length}
            span(style='font-weight: normal;')  Followers
          p#following-btn
            | #{user.following.length}
            span(style='font-weight: normal;')  Following
        .socials(style='width: 100%; display: flex; justify-content: flex-start')
            - if(user.facebook)
                a(href=`${user.facebook}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')
                    i.fab.fa-facebook
            -if(user.linkedin)
                a(href=`${user.linkedin}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')
                    i.fab.fa-linkedin 
            - if(user.twitter)
                a(href=`${user.twitter}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')
                    i.fab.fa-twitter   
            - if(user.youtube)
                a(href=`${user.youtube}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')
                    i.fab.fa-youtube
            - if(user.dribbble)
                a(href=`${user.dribbble}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')
                    i.fab.fa-dribbble
            - if(user.devto)
                a(href=`${user.devto}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')  
                    i.fab.fa-dev  
            - if(user.github)
                a(href=`${user.github}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;') 
                    i.fab.fa-github 
            - if(user.personal)
                a(href=`${user.github}` target='_blank' style='font-size: 22px; color: #5be0a0; margin-right: 1rem;')
                    i.fas.fa-laptop-code
      - let markup = 'follow';
      - let arr = [];
      - let idArr = loggedUser.following.map(doc => arr.unshift(doc._id.toString()));
      - if(arr.includes(user._id.toString())) markup = 'following'                
      button.btn(href='/settings' id=`follow-${user._id}` onClick=`handleFollowClickUser(this.id)`) #{markup}                                            
    br  
    - if(user.cv)
      .cv(style='margin: 2rem 0') 
         
          a(href=`/documents/${user.cv}` download style='text-decoration: none; font-size: 20px; color: #0e1127; font-weight: bold')  
            i.fas.fa-download 
            |&nbsp;&nbsp; Download #{user.name}'s Cv
    br        
    hr#hr  

    .feed
      - if(user.role === 'user')
        - if(user.posts.length === 0)
          h2(style='color: #1DA977')= `No Posts Yet From ${user.name}`
          img(src='/illustrations/no-posts.svg' width='80%' height='40%')
        each post in user.posts
          .post
              .settings-btn(id=`settingBtn-${post._id}` onClick='toggleSettings(this.id)')
                i.fas.fa-ellipsis-h(style='color: #1DA977;')
              .settings(id=`settings-${post._id}`)
                button.button(id=`report-${post._id}` onClick='toggleReportContainer')
                  i.fas.fa-exclamation-triangle(style='font-size: 20px')
                  span(style='font-size: 20px')   Report This Post 
                .reportContainer#reportContainer
                  h2 Please Select a Problem to continue      
                  .reasons
                    label.checkbox-container
                      input(type='checkbox' value='Nudity')
                      |             Nudity
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Violence')
                      |             Violence
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Harrasment')
                      |             Harrasment
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Self-injury')
                      |             Self-injury
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Spam')
                      |             Spam
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Hate Speech')
                      |             Hate Speech
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Terrorism')
                      |             Terrorisme
                      span.checkmark

                    label.checkbox-container
                      input(type='checkbox' value='Inapropriate Content')
                      |             Inapropriate Content
                      span.checkmark

                    
                  input.something-else(type='text' placeholder='something else ? ...' id=`something-else-${post._id}`)
                  button.btn(id=`submitReport-${post._id}` onClick='reportPost(this.id)') Submit Report

              .info
                  img(src=`/img/users/${post.user.photo}` alt='avatar' width='50px' height='50px')
                  .name
                      h3 #{post.user.name}
                      p #{new Date(post.createdAt).toLocaleString('en-us', { day:'numeric', month:'short', hour:'numeric', minute:'numeric'})}
              

              .content#content
                  - if(post.sanitizedHtml)
                      != `${post.sanitizedHtml}`
              - if(post.postType === 'image')  
                  img.post-image(src=`/img/posts/${post.image}` alt='post-image')
              - if(post.postType === 'video')
                  video.post-video(controls='' preload='metadata')
                      source(src=`/videos/${post.video}#t=0.5`)    
              .actions
                  .stats
                      p(id=`numLikes-${post._id}` style='transition: all 0.1s ease') #{post.numLikes} likes
                      p(id=`numComments-${post._id}`) #{post.numComments} comments
                  ul.action-buttons
                      li
                          - let likeBtnStyle = 'unliked';
                          - if(post.likes.includes(loggedUser._id)) likeBtnStyle = 'liked'
                          - const id = post._id;
                              i.fas.fa-heart(style='cursor: pointer; transition: all 0.1s ease' class=`${likeBtnStyle}` id=`${id}` onClick='handleLikeBtnClick(this.id)' data-state=`${likeBtnStyle}`)
                      li
                          i.far.fa-comment-dots(style='cursor: pointer; color: #0c0e1c;' id=`${post._id}` onClick='toggleComments(this.id)')
                      li
                          - let markBtnStyle = 'unmarked';
                          - if(loggedUser.saved.includes(post._id)) markBtnStyle = 'marked'
                              i.far.fa-bookmark(style='cursor: pointer;' id=`${post._id}-bookmark` onClick='handleBookmarkClick(this.id)' data-state=`${markBtnStyle}` class=`${markBtnStyle}`)
              .add-comment
                  input(type='text' placeholder='ADD Comment...' id=`comment-input-${post._id}`)
                  button(id=`addComment-${post._id}` onClick='addComment(this.id)' style='outline: none; cursor: pointer') ADD
              .comments(id=`comments-${id}` data-state='hidden')
                  each comment in post.comments
                      .comment
                          div
                              img(src=`/img/users/${comment.user.photo}` alt='')
                              p #{comment.user.name}
                              p(style='align-self: flex-end; position: absolute; right:0; font-size: 14px; font-weight: normal;') #{new Date(comment.createdAt).toLocaleString('en-us', { day:'numeric', month:'short', hour:'numeric', minute:'numeric'})}
                          p.comment-content #{comment.text}
      - if(user.role === 'startup') 
          - if(jobs.length === 0) 
            h2(style='color: #1DA977')= `No Posts Yet From ${user.name}`
            img(src='/illustrations/no-posts.svg' width='80%' height='40%')
          each job in jobs 
            .job2 
              .top2 
                  .left-side2 
                      img(src=`/img/users/${job.author.photo}` width='100px' height='100px') 
                      h3 #{job.author.name}

                  .right-side2 
                      p.job-title #{job.title} 
                      p.job-location 
                        i.fas.fa-map-marker-alt &nbsp;&nbsp;
                        | &nbsp; #{job.jobLocation}
                          
                      - let state = 'not-applied'
                      - let markup = 'Apply'
                      - let display = 'none'
                      - let arr = job.applicants.map(appl => appl._id.toString())
                      - if(arr.includes(loggedUser._id.toString())) state = 'applied'
                      - if(arr.includes(loggedUser._id.toString())) markup = 'Applied'
                      - if(arr.includes(loggedUser._id.toString())) display = 'inline-block'       
                      button.btn(id=`apply-${job._id}` onclick='jobApply(this.id)' data-state=`${state}`) 
                            i.fas.fa-check(style=`display: ${display}; margin-right: 0.2rem`) 
                            | #{markup}
                      button.btn(id=`save-${job._id}` onclick='saveJob(this.id)' style='background-color: #0c0e1c;') Save    
                          
              .bot2 
                  h3 Job Description
                  p.job-desc #{job.description}                    
.followersFollowing#following
        div(style='display: flex; justify-content: space-between; width: 100%; align-items: center;')
            h2(style='width: 50%') Following
            i.fas.fa-times#close(style='cursor: pointer')
        each followingUser in user.following
            .user
                img(src=`/img/users/${followingUser.photo}` alt='' height='40px' width='40px' style='border-radius: 50%')
                a(href=`/users/${followingUser.slug}` style='text-decoration: none; color: #000; font-size: 20px; margin-left: 1rem;') #{followingUser.name}
                - let f = 'follow';
                - const arr = loggedUser.following.map(x => x._id.toString());
                - if(followingUser._id.toString() === loggedUser._id.toString()) f = 'You'
                - if(arr.includes(followingUser._id)) f = 'following';
                - let col = '#000';
                - if(f === 'follow') color = '#1DA977';
                    p(id=`following-${followingUser._id}` onClick=`handleFollowClickUser(this.id)` style=`cursor: pointer; color: ${color}`) #{f}

.followersFollowing#followers
        div(style='display: flex; justify-content: space-between; width: 100%; align-items: center;')
            h2(style='width: 50%') Followers
            i.fas.fa-times#close-followers(style='cursor: pointer')
        each followerUser in user.followers
            .user
                img(src=`/img/users/${followerUser.photo}` alt='' height='40px' width='40px' style='border-radius: 50%')
                a(href=`/users/${followerUser.slug}` style='text-decoration: none; color: #000; font-size: 20px; margin-left: 1rem;') #{followerUser.name}
                - let f = 'follow';
                - const arr = loggedUser.following.map(x => x._id.toString());
                - if(followerUser._id.toString() === loggedUser._id.toString()) f = 'You'
                - if(arr.includes(followerUser._id)) f = 'following';
                - let col = '#000';
                - if(f === 'follow') col = '#1DA977';
                    p(id=`follower-${followerUser._id}` onClick=`handleFollowClickUser(this.id)` style=`cursor: pointer; color: ${col}`) #{f}

div#notif-panel
  .notif-header
    p Notifications
  .notif-container
    each notification in loggedUser.notifications

      .notif
        .img 
          img(src=`/img/users/${notification.user.photo}`)
        .content 
          - let message = ''
          - if(notification.notifType === 'follow') message = 'started following you'
          - if(notification.notifType === 'like') message = 'liked your'
          - if(notification.notifType === 'comment') message = 'commented on your'
          - let url = ''
          - let display = 'none'
          - if(notification.notifType === 'like' || notification.notifType === 'comment') display = 'inline'
          - if(notification.notifType === 'like' || notification.notifType === 'comment') url = `/me#${notification.post}`

          p 
            span(style='font-weight: bold') #{notification.user.name}
            |  #{message}
            a(href=`${url}` style=`display: ${display}; text-decoration: none; color: #1DA977`)  post
          p(style='font-size: 16px') #{new Date(notification.createdAt).toLocaleString('en-us', { day:'numeric', month:'short', hour:'numeric', minute:'numeric'})}                                     
                        

script(src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.1/build/highlight.min.js")
script(src='https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.js' integrity='sha256-bd8XIKzrtyJ1O5Sh3Xp3GiuMIzWC42ZekvrMMD4GxRg=' crossorigin='anonymous')
script(type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js")
script(defer='' src='https://use.fontawesome.com/releases/v5.8.2/js/all.js')
script(type='module' src='/js/userProfile.js')

